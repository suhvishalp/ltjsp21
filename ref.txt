
1. openjdk 1.8 
2. Eclipse for EE / STS 4 
3. MySQL community server 8.xxx
    - mysql workbench 
4. nodejs 12 / 14
5. mongodb community server - any latest
6. docker 



Language                            library / pacakges                    framework 

Java                                standard libraries                      Spring 
                                    3rd party libraries 

C#                                  ////                                    .Net 

javascript                          JQuery, React, bootstrap                angular 

python                              ///                                     ...//


  |                                         |                               |
Programming                         simplify some tasks                 standardize the process 
capabilities 




build tools 
    - maven 
    - gradle 

deployment tools 

testing tools 

linting 



Spring Framework
--------------------

    - IOC - inversion of control 
                - delegates the responsibility to create the objects to container 

    - Container 
        - responsible to manage the life cycle of objects 

        BeanFactory interface 

        ApplicationContext interface 
            - ClassPathXmlApplicationContext
            - AnnotationConfigApplicationContext
            - WebXmlApplicationContext
            - ....
            - ...

    - Spring beans / bean definition 
            - spring beans are objects which are managed by container

    - Ways to define beans 

        - xml 
            <bean id="employee" class="com.demo.bo.Employee"></bean>    
	        <bean id="employeeService" class="com.demo.services.EmployeeSerivce"></bean>
           <bean id="employeeDAO" class="com.demo.dao.EmployeeDAO"></bean>
    
        - java 
                	@Bean
                    public EmployeeService createEmployeeService() {
                        return new EmployeeService();
                    }

        - annotation 
            - @Component, @Service, @Controller, @Repository

    - application without spring 


    - application with spring 


    - Spring modules 
    ----------------------
        Core    : Provides core features like DI (Dependency Injection), Internationalisation, Validation, and AOP (Aspect Oriented Programming)
        Data Access : Supports data access through JTA (Java Transaction API), JPA (Java Persistence API), and JDBC (Java Database Connectivity)
        Web : Supports both Servlet API (Spring MVC) and of recently Reactive API (Spring WebFlux), and additionally supports WebSockets, STOMP, and WebClient
        Integration : Supports integration to Enterprise Java through JMS (Java Message Service), JMX (Java Management Extension), and RMI (Remote Method Invocation)
        Testing:     Wide support for unit and integration testing through Mock Objects, Test Fixtures, Context Management, and Caching


    DTO 

    Pojo 

    Java Beans 

    Spring Beans 

    VO 

    BO 

    Entities 


https://www.baeldung.com/spring-bean
https://www.baeldung.com/spring-why-to-choose





